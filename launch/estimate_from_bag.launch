<!-- launch file for running the mekf on bag data -->


<launch>

  <!-- Load common parameters -->
  <rosparam command="load" file="$(find misc_launch)/params/tune_multirotor.yaml"/>

  <!-- Is Flying Publisher -->
  <!-- <node pkg="rostopic" type="rostopic" name="is_flying_pub" args="pub is_flying std_msgs/Bool true"/> -->

  <!-- Status Publisher -->
  <!-- <node pkg="rostopic" type="rostopic" name="status_pub" args="pub -r 1 status rosflight_msgs/Status '{armed: true, failsafe: false, rc_override: false, offboard: true, error_code: 0, num_errors: 0, loop_time_us: 1}'"/> -->

  <!-- rosbag in -->
  <node pkg="rosbag" type="play" name="player" output="screen" args="--clock /home/jesse/Desktop/rosbags/sept_22_17/rock3_trimmed.bag"/>

  <!-- rosbag out -->
  <!-- <node name="record" pkg="rosbag" type="record" args="-all -o rock3_uvw_tuning_big_Q" output="screen"/> -->

  <!-- euler attitude conversion node -->
  <node pkg="misc_launch" type="quat2euler_pub.py" name="quat2_euler_pub">
    <remap from="estimate" to="estimate_offline"/>
  </node> 

  <!-- State Estimator -->
  <node pkg="roscopter" type="mekf" name="mekf" output="screen">
    <!-- <remap from="baro" to="baro/data"/> -->
    <!-- <remap from="sonar" to="sonar/data"/> -->
    <!-- <remap from="magnetometer" to="mag/data"/> -->
    <remap from="gps/data" to="gps"/>
    <remap from="estimate" to="estimate_offline"/>
  </node>

  <!-- PID Position Controller -->
  <!-- <node name="controller" pkg="roscopter" type="controller"> -->
    <!-- <remap from="estimate" to="ground_truth/odometry/NED"/> -->
    <!-- <remap from="estimate" to="estimate"/> -->
  <!-- </node> -->

  <!-- Waypoint Manager -->
  <!-- <node name="waypoint_manager" pkg="roscopter" type="waypoint_manager.py" output="screen"> -->
    <!-- <remap from="waypoint" to="high_level_command"/> -->
    <!-- <remap from="state" to="ground_truth/odometry/NED"/> -->
    <!-- <remap from="state" to="estimate"/> -->
  <!-- </node> -->

  <!-- plot states -->
  <node pkg="roscopter" type="states_plotter.py" name="states_plotter" output="screen">
      <param name="time_window" value="10.0"/>

      <remap from="estimate" to="estimate_offline"/>
  </node>




</launch>
